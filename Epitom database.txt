create database TheEpitom;

use TheEpitom;

-- Table for Admin
CREATE TABLE Admin (
    Admin_Id INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100),
    Address VARCHAR(255)
);

-- Table for Employee
CREATE TABLE Employee (
    Employee_Id INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100),
    Location VARCHAR(255),
    Room_Id INT,
    FOREIGN KEY (Room_Id) REFERENCES Rooms(Room_Id)
);

-- Table for Customer
CREATE TABLE Customer (
    Customer_Id INT PRIMARY KEY AUTO_INCREMENT,
    Fname VARCHAR(100),
    Lname VARCHAR(100),
    Address VARCHAR(255),
    City VARCHAR(100),
    State VARCHAR(100),
    Country VARCHAR(100),
    Dob DATE,
    Age INT
);

-- Table for Room
CREATE TABLE Rooms (
    Room_Id INT PRIMARY KEY AUTO_INCREMENT,
    Category_Id INT,
    Room_Category VARCHAR(100),
    Price DECIMAL(10, 2),
    Available BOOLEAN
);

-- Table for Events
CREATE TABLE Events (
    Event_Id INT PRIMARY KEY AUTO_INCREMENT,
    Title VARCHAR(255),
    StartDate DATE,
    EndDate DATE,
    Event_Duration INT
);

-- Table for Vehicle
CREATE TABLE Vehicle (
    Vehicle_Id INT PRIMARY KEY AUTO_INCREMENT,
    License_Plate VARCHAR(50),
    Capacity INT,
    Vehicle_Category VARCHAR(100),
    Price DECIMAL(10, 2),
    Duration INT
);

-- Table for Orders
CREATE TABLE Orders (
    Oder_Id INT PRIMARY KEY AUTO_INCREMENT,
    Customer_Id INT,
    Product_Id INT,
    Order_Date DATE,
    Payment_Status BOOLEAN,
    Discount_Id INT,
    FOREIGN KEY (Customer_Id) REFERENCES Customer(Customer_Id),
    FOREIGN KEY (Product_Id) REFERENCES Product(Product_Id),
    FOREIGN KEY (Discount_Id) REFERENCES Discount(Discount_Id)
);

-- Table for Product
CREATE TABLE Product (
    Product_Id INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100),
    Specification TEXT,
    Qty INT,
    Price DECIMAL(10, 2)
);

-- Table for Discount
CREATE TABLE Discount (
    Discount_Id INT PRIMARY KEY AUTO_INCREMENT,
    Discount_Date DATE,
    Percentage DECIMAL(5, 2)
);

-- Table for Feedback
CREATE TABLE Feedback (
    Feed_Id INT PRIMARY KEY AUTO_INCREMENT,
    Customer_Id INT,
    Feedback_Text TEXT,
    FOREIGN KEY (Customer_Id) REFERENCES Customer(Customer_Id)
);



SELECT 
    c.Fname, 
    c.Lname, 
    o.Oder_Id, 
    p.Name AS Product_Name, 
    o.Order_Date, 
    o.Payment_Status, 
    d.Percentage AS Discount_Percentage,
    o.Discount_Id
FROM 
    Customer c
JOIN Orders o ON c.Customer_Id = o.Customer_Id
JOIN Product p ON o.Product_Id = p.Product_Id
LEFT JOIN Discount d ON o.Discount_Id = d.Discount_Id
WHERE 
    c.Customer_Id = 1;  
